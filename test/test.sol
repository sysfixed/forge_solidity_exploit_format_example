// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "./interface.sol";

interface IEVILBadex is IERC20 {
      //isi interface IEVILBadex
}

contract EVILExploit is Test {
    //contoh deklarasi address
    address LP_ADDRESS = 0x09CD30D9162e8619b03Df7aE9229B4e719582c8C; // address LP EVILBadex
    address EVIL = 0x9255590C2e66aBb441A9b19A8c518E12FBD5c4d3; // address EVILBadex
    address WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6; // address WETH
    
    function setUp() public {
        vm.createSelectFork("goerli", 8489831); // save block number setelah kontrak dibuat + dikasih liquidity
        vm.label(EVIL, "EVIL");
        vm.label(WETH, "WETH");
    }

    function testExploit() public {
      emit log_named_decimal_uint("Balance Token di PAIR Awal", IERC20(EVIL).balanceOf(LP_ADDRESS),18);
      emit log_named_decimal_uint("Balance WETH di PAIR Awal", IERC20(WETH).balanceOf(LP_ADDRESS),18);
      deal(WETH, address(this), 0.1 ether);
      console.log("---------------");
      emit log_named_decimal_uint("Balance Token di Attacker Awal", IERC20(EVIL).balanceOf(address(this)),18);
      emit log_named_decimal_uint("Balance WETH di Attacker Awal", IERC20(WETH).balanceOf(address(this)),18);
      console.log("---------------");
      console.log("Setelah Exploit");
      console.log("---------------");

      console.log("Code Exploitmu dibawah sini");
      
      
    }
}